import jenkins.*
import jenkins.model.*
import com.cloudbees.plugins.credentials.domains.Domain
import com.cloudbees.plugins.credentials.CredentialsScope
import com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey

def sshRootPath = System.getenv("HOME") + "/.ssh"
def id_rsa = new File("${sshRootPath}/id_rsa")
if (!id_rsa.exists()){
    return
}
// Create a global credential to work with git, this is needed to access the git related jobs.
// which means all the jobs, since all our jobs are somewhat working with git :)
// This assumes there is a ssh private key in ${JENKINS_HOME}/.ssh/ which i actually added in dockerfile , no need to worry
global_domain = Domain.global()
credentials_store =
Jenkins.instance.getExtensionList(
'com.cloudbees.plugins.credentials.SystemCredentialsProvider'
)[0].getStore()

credentials = new BasicSSHUserPrivateKey(
    CredentialsScope.GLOBAL,
    "ssh-jenkins-user-keys",
    "jenkins",
    new BasicSSHUserPrivateKey.DirectEntryPrivateKeySource(id_rsa.getText()),
    "",
    "")
credentials_store.removeCredentials(global_domain, credentials)
credentials_store.addCredentials(global_domain, credentials)

def trimQuotesAndSpaces(string) {
    def output = string.replaceFirst(/^["'\t ]*/, '')
    output = output.replaceFirst(/["'\t ]*$/, '')
    return output
}
// Add each file marked in environment to the sshkey store
// Expected variable format is _<SPECIFIC_NAME_THAT_WILL_SERVE_AS_ID>_SSH_KEYPATH_=<relative_path_to_ssh_from_jenkins_home_ssh_directory>
// It can have a _USERNAME_ and _PASSPHRASE_ associated if needed, with defaults as user jenkins with no passphrase
keySuffix = "_SSH_KEYPATH_"
System.getenv().each { environ ->
    environ = trimQuotesAndSpaces(environ.toString())

    if (environ ==~ /^[^=]*${keySuffix}=.*/) {
        def key = environ.replaceAll("=.*", "")
        def value = System.getenv(key)
        def keyName = key.replaceFirst("_", "")
        keyName = keyName.replaceFirst(/${keySuffix}.*/, "")
        keyName = keyName.replaceAll("_", "-")
        keyName = keyName.toLowerCase()
        credentials = new BasicSSHUserPrivateKey(
            CredentialsScope.GLOBAL,
            keyName + "-keys",
            System.getenv(key.replaceFirst(keySuffix,"_USERNAME_")) ?: "jenkins",
            new BasicSSHUserPrivateKey.DirectEntryPrivateKeySource(new File("${sshRootPath}/${value}").getText()),
            System.getenv(key.replaceFirst(keySuffix,"_PASSPHRASE_")) ?: "",
            "${keyName} ssh private key")
        credentials_store.removeCredentials(global_domain, credentials)
        credentials_store.addCredentials(global_domain, credentials)
    }
}
